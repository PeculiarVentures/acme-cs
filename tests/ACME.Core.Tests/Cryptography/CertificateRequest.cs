using System;
using System.Collections.Generic;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using Xunit;

namespace PeculiarVentures.ACME.Cryptography
{
    public class Pkcs10CertificateRequestTests
    {
        public const string Data = "MIICiTCCAXECAQAwFDESMBAGA1UEAxMJdGVzdCB1c2VyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA25r0vmPrffnR0zk1bXVUBtpSU0KxGLYj0iQfSgjYymGrZi3yZgEHS0PugdjkeEIygHRFHFZwl1kBjbR2iH6ZJ3orlNTPiMocn6PYYSf2oUW+ulK/qVV6u0LHlLKwvjyD0lDX79LWxcseW0YfPRjjAN6N5madFEBvoW/JoJP1o6uWiiGSYNUfzgXOfD62Ymx6NE7Y77WBzJQRYrWst/rAPOdVeLWQV2JWM5TEjkno0g8AcTr89d6DnHC9gXP4hfIoWxEeOBx7sNWB92huStgDRqwGHggsvchMWN5+aTGiVr9TQqX4U/fuCPnstLT7l5jgIMCBHctX/zfC7OtfHCbDxwIDAQABoDAwLgYJKoZIhvcNAQkOMSEwHzAdBgNVHQ4EFgQUNMsalvuvEmO6M/rgJbzzbCW4pVMwDQYJKoZIhvcNAQELBQADggEBAGG7AdvF3eElEymcfSL8TOJOC5Ga3QBNDAXwkBKqeN0ymhRp/We9ASnWDo1NbsXqnEViIhCf4ILLZHMrX3cU4SccDkfgeR8aYhgdQkuR5uNjxFX2qATzAhNhXiWBDPc2wO8QJWr1GJicDLRf1O+g8yELNPfmfZqzyf+YZTzPbSUp2JF9k0IpoVl9Z/Qqj8b9lTfLRvrKcM5ULospCbY/keLk4kWaxl7L6U+1sAvNI/qvlAW4SeOI4zDy2JYqyNklV/nd5X7wA6wItkZYdO6hvSXsIqapTL3rTEexCYTAng1nEa9Fzy2I869DXA5o1LW7ZbZsvjfGvD6JD44xPjJlnhg =";

        public const string PKCS10_BASE64 = "MIIEZTCCA00CAQAwADCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN3DfQ1bBl350/eTpBpCkDtAH2qLUagB9zhXyXy3tM3lvnLr6IQwizd7J2zvWHrYnCe67agCdqWHtmu5sN362gkWkR1vmiDGHNEFeYJWNjAqU75ZueJTjntuJum6DljtIAy/kHjAFlrrXu9E82j17AeghBY0ctRfi3A61BGzaeX4TfBz/z/KM/OSQ1SDVwXICKkDDb3cJY3vcSvAr5r9a14ZMWCJJ4BO0CUt1nnFcLvjtQuePnHqBsmJIzUBb/N/SyT9JZdMyLXdgp4fsDKMwh34SN6UkHGDwJSS6mCI+MdCGPGzkUFku68C1o3y512+mOHzlJGG3zOIip8zaCLPm7kCAwEAAaCCAh4wGgYKKwYBBAGCNw0CAzEMFgo2LjIuOTIwMC4yMFwGCSsGAQQBgjcVFDFPME0CAQUMHUFFRy1ERVYwLVdpbjEwLmFlZ2RvbWFpbjIuY29tDBNBRUdET01BSU4yXGFlZ2FkbWluDBRHbG9iYWxTaWduLkFnZW50LmV4ZTB0BgorBgEEAYI3DQICMWYwZAIBAR5cAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcgAgAHYAMQAuADADAQAwggEqBgkqhkiG9w0BCQ4xggEbMIIBFzA+BgkrBgEEAYI3FQcEMTAvBicrBgEEAYI3FQiCnLUch5KUBYXJgxSCta95hJfeM4EGh67GV4fQ/yoCAWQCAQYwKQYDVR0lBCIwIAYIKwYBBQUHAwIGCCsGAQUFBwMEBgorBgEEAYI3CgMEMA4GA1UdDwEB/wQEAwIFoDA1BgkrBgEEAYI3FQoEKDAmMAoGCCsGAQUFBwMCMAoGCCsGAQUFBwMEMAwGCisGAQQBgjcKAwQwRAYJKoZIhvcNAQkPBDcwNTAOBggqhkiG9w0DAgICAIAwDgYIKoZIhvcNAwQCAgCAMAcGBSsOAwIHMAoGCCqGSIb3DQMHMB0GA1UdDgQWBBTDk6MibzRIxz531sQq6M3L8y3xVjANBgkqhkiG9w0BAQUFAAOCAQEAkx5t8sMiOKABJ5O9WR5HerIVAv20/gi6V8muF3nJ8MgcpUVYdz6xdjpZ13BEu6G8DZ+D0Jp4nyXiokogNiRyTJB3TbgVzBTR7YrJmUmfPsxQwXd6ToDVkWbCfq5pbby16iSC+r/ULDKx9RajgxryjqG0JKzLHMwvi1B3HMs1i0DcMHlZz+ILAudj3FTB3VvxDWKQA249PZh9GBtjFpdwlPKj5l3bRtPNZ49i9PRbVz2Lz8/XqKxKCK+40H0L0Fw3zr9lOQK1Fydn6/Iom9WhXjKRXlsIsBcapfZjoUxosE8pTGRNj23PT4w5BbDzMTyI5fefea6/PavRhzd+fV/Wnw==";
        public const string PKCS10_EMPTY_BASE64 = "MIICZzCCAU8CAQAwIjEgMB4GA1UEAwwXbWFjLW1pbmkuYWVnZG9tYWluMS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCyiZeRY2Zi6Xnu+asuL85d29Km+WXIQYOk5oo0IsDH7S2KjR4VyulDfNAx6cH9TQydg4LBzve3adBB9hAxpqJOy1ooaLENlml07uXj758C7La5NioBqTjoohbERnzjSpZqiH+08INPtZDDpPH6pRU3MmmtFSywE0R9KOUGNcLXhFHP3jAbiJo5dQDxWUYpjf4ZUlLwE3k6yjtM7y2UlWFb1pB/207FkV/DY+YUTx0PToylGDHLYWdKUXBgAU/htN1VN5tezRd6wwznIP8OiZ8Ebtctq3loA9PfTYblLirYBvuKMPXYbNjw5Fp5XmMFFX83+zLsND3cn4Susdfu7L0hAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEAHpbQ+KTx98neqGtJ6QpmfRuUoHI0tRuCLzmdnCLblqso0bSLDgRgK+bEHVjnIpPpmfu/ZBbK4Hn73nZZPPqpaKE33Ef8A4fKjRrx+5pVSPjt783xrI8uUnn5fmip5pZL07tP8J/RQN30SIRBnCSKUnIgurA5tDPwayxmpnAoh8D5Jl0vvmNAnbHBKvTBAoJDrHLLMyJlbQh2Ip7GPfvfic8yGvaHYKtLfNR52y77aNEc90g3CymtxdImJRYYCjZuAYbfYk31DeKBNTFl1OM+VOqEAUOv/meRxGsEELHHykbYcOOef610LzbR/D10p9e/zaeXyaXlr/GBHQKPUvenTg==";
        public const string PKCS10_TEMPLATE_V1_BASE64 = "MIIDpjCCAo4CAQAwADCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJi/w0y6Q3utLS11QHzpJHkQXJeJ4Wcnv4lBksyBkcerRBh9MxvjZ9Ap9fSHEX6fPg/M1GC2MrDN80u3wbWfkDOXgs7CO/bNwNZs9L8DohStzCuEBP6elf75mB0cPe3hYtPxhPGnJTivSfmLjFAvPqjCkdfbFnSYMb0wpnEisx3aebHWktkOEw+fJHYmQOTqLNwEFI1/EIojsUiaVhVLX2l9tqVMdWvehC+bnWNR12kpG9d9Ba22Tt9lmxkcz9SIKWd7QS8C94FqLhevnpUWv/gsnBdEEr85E2DAwl1XGzoRjhsFFWEUkbi73ENJBVPAWjKFdM+wstOhkkuH0PTKZBMCAwEAAaCCAV8wHAYKKwYBBAGCNw0CAzEOFgwxMC4wLjE0MzkzLjIwTQYJKwYBBAGCNxUUMUAwPgIBBQwbQUVHLURFVjAtU1JWLmFlZ2RvbWFpbjIuY29tDBNBRUdET01BSU4yXGFlZ2FkbWluDAdNTUMuRVhFMHQGCisGAQQBgjcNAgIxZjBkAgECHlwATQBpAGMAcgBvAHMAbwBmAHQAIABFAG4AaABhAG4AYwBlAGQAIABDAHIAeQBwAHQAbwBnAHIAYQBwAGgAaQBjACAAUAByAG8AdgBpAGQAZQByACAAdgAxAC4AMAMBADB6BgkqhkiG9w0BCQ4xbTBrMCUGCSsGAQQBgjcUAgQYHhYAQwBvAGQAZQBTAGkAZwBuAGkAbgBnMBMGA1UdJQQMMAoGCCsGAQUFBwMDMA4GA1UdDwEB/wQEAwIHgDAdBgNVHQ4EFgQUqyvHUZFrfgNpmU405hwkEoV03g4wDQYJKoZIhvcNAQEFBQADggEBAAU5Eot27uRcBjUzVdZM9YLy77ZJrNjwahyx/TJtAamjG/fD0Q9fDeKdWGtZC9C2ARjpK2L8helINhkV3EIUlZNgmB7w4BwEa0CqH59DD4xne838QYYU4JSgSu3K2Bv2iAaD/IvdRUOGRzTC1wnuwR0E6Wuaoiwozg+9EkicwBDJdZh5I9uC3inmC1tr9eBz2q5mg6gon3sJ1Lb7s7rWGrMuwLX6GBRmdGUinwmgxqRHH4qwQd+fn770e1AELgxnrTg5ovIyOSfT/rywHtAVbxwBQBu1+oOvL+xXeTwIioAR+ctIyPlZmP43/pLN38ZPD/sPiUpUUcR44M6jE3+wVlE=";
        public const string PKCS10_INTUNE_CHALLENGE_BASE64 = "";
        public const string PKCS10_UTF8_CHALLENGE_BASE64 = "MIIBmzCCAQQCAQAwQjELMAkGA1UEBhMCWFgxFTATBgNVBAcMDERlZmF1bHQgQ2l0eTEcMBoGA1UECgwTRGVmYXVsdCBDb21wYW55IEx0ZDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAn2M0Abg2jL/+v9J54r+ASAY5XQFmbQJiaBJAaPg/o3dwmw+UawbzSopPFMXCgSJeczcFV4GkN1eEYq2Cmam3tH6t8mVDh0/UryJSWBsaFm9mh9RFgIpP0hEkYZTf/0X+X06ukt9S/Id9Z/tVgPsZA3TcNjNhJfVaTm81/4ykq8UCAwEAAaAZMBcGCSqGSIb3DQEJBzEKDAhhc2RmYXNkZjANBgkqhkiG9w0BAQUFAAOBgQCaivuDRBlHOhBjg6wPbH9NvCnvEnxeEAkYi0Sl/Grdo/WCk17e+sv9wgqEW1QSIdbVXzMeWidurv4AtcATwhfk9tBcYBCTxANkTONzhJG7Yk9OAz8g8Ljo8EEvPf4oHqpwtBg10DCD2op0lCwL2LBdPO3RG20f/HD6fEXPVxZdOQ==";
        public const string PKCS10_GITHUB_COM = "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";
        public const string PKCS10_DOUBLE_ATTR = "MIIC2TCCAcECAQAwADCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALnBT1ThNtfYCmvHzeJs2bS2YIoTTeac5Z3OwR1ObuQfTzSxBMQnpKiQUtKKjEv/HvXbuxCdbFYlDGmNyfSWDzMKXQzFqbsZBz4djp8JQ2pCLhCSUezn86fZX2EWJjbw0jgY73+krchtWQt6pQA0tmM26glB7jMh7UKHnR39PsVhfyRIeCGa2w6htoyVNiA6GyzXIWYaBfV5QTZWdPRgPutrUug7SDdwV0q+KWP2GT4RNVBdAb/mSe0IaVd1zDQGzjBMXwdUJH2AKOayP87+RsTBbSBB+r1gGyEXI53xeLzyb2YazsBt10lvmG/adNkeaLS7jwsxpUwzDHZHPzbl3fECAwEAAaCBkzAXBgkqhkiG9w0BCQcxCgwIcGFzc3dvcmQwJgYKKwYBBAGCNw0CATEYMBYeCgBPAHQAaABlAHIeCAB0AGUAcwB0MFAGCisGAQQBgjcNAgExQjBAHiAAQwBlAHIAdABpAGYAaQBjAGEAdABlAFUAcwBhAGcAZR4cADEALgAyAC4AMwAuADQALAAgADIALgAzAC4ANDANBgkqhkiG9w0BAQsFAAOCAQEAKA+QbhNK2LhSZdh19O6KwWjFOYIsDCkwmRpEVqpQ/CWBcBWRDk/mhbxnbVSfNhXwKgQN/PMgX8QuugpFy/sBWjGOaFYiGE9tq2HCpooMyZagKVdyb0jwpFveECGVeZj5B/5xzCoxOwzpXiXklcjvofuD0/ASLAnXQ+34yr/otwmTGvpfAZ5OOsdTya0TZ/Q+lXw1sfoXF0CpRhwUTGZxt9GLR5XDRS7TAYkmMjkgGLhEyLtyXnC5dZl3vlFDCxv2End0ZwOuxdQo/1YqFhE2iDLeDwbpZl/xkTrE18OttHRaGX3VeCWzJbOjHylnEFEtdEM1bwg7oGf4GbqwCKMPfw==";

        [Fact]
        public void Import()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            Assert.True(req.Verify());
            Assert.Equal(0,req.Version);
            Assert.Equal("",req.Subject);
            Assert.Equal("1.2.840.113549.1.1.1", req.PublicKey.Oid.Value.ToString());
            Assert.Equal(6, req.Extensions.Count);
        }

        [Fact]
        public void Export()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            Assert.IsType<byte[]>(req.Export());
        }

        [Fact]
        public void Version()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            var version = req.Version;
            Assert.IsType<int>(version);
        }

        [Fact]
        public void Subject()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            var subject = req.Subject;

            Assert.NotNull(subject);
            Assert.IsType<string>(subject);
        }

        [Fact]
        public void SignatureAlgorithm()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            var subject = req.SignatureAlgorithm;

            Assert.NotNull(subject);
            Assert.IsType<Oid>(subject);
        }

        [Fact]
        public void PublicKey()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            var publicKey = req.PublicKey;

            Assert.NotNull(publicKey);
            Assert.IsType<PublicKey>(publicKey);
        }

        [Fact]
        public void Verify()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            Assert.True(req.Verify());
        }

        [Fact]
        public void Extension_TemplateV2()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            var template = (X509TemplateExtensionV2)req.GetExtension(OidExtensions.TemplateV2);
            Assert.Equal(new Oid(OidExtensions.TemplateV2).Value, template.Oid.Value);
            Assert.Equal(100, template.MajorVersion);
            Assert.Equal(6, template.MinorVersion);
            Assert.NotNull(template.Id);
            Assert.IsType<Oid>(template.Oid);
        }

        [Fact]
        public void Extension_TemplateV1()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_TEMPLATE_V1_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            var template = (X509TemplateExtensionV1)req.GetExtension(OidExtensions.TemplateV1);
            Assert.Equal(new Oid(OidExtensions.TemplateV1).Value, template.Oid.Value);
            Assert.Equal("CodeSigning", template.CertificateTemplate);
        }

        [Fact]
        public void Attributes_Get()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_INTUNE_CHALLENGE_BASE64);
            var req = new Pkcs10CertificateRequest(rawData);
            Assert.Equal(6, req.Attributes.Length);
        }

        [Fact]
        public void Attributes_Get_Double()
        {
            byte[] rawData = Convert.FromBase64String(PKCS10_DOUBLE_ATTR);
            var req = new Pkcs10CertificateRequest(rawData);
            Assert.Equal(3, req.Attributes.Length);
        }

        [Fact]
        public void Create_Attributes()
        {
            var ChallengePasswordAttribute = new X509ChallengePasswordAttribute("password");
            var EnrollmentNameValuePairAttribute = new X509EnrollmentNameValuePairAttribute(new X509EnrollmentNameValuePairParams()
            {
                CertificateUsage = (new List<Oid>(){ new Oid("1.2.3.4"), new Oid("2.3.4") }).ToArray()
            });
            var EnrollmentNameValuePairAttribute2 = new X509EnrollmentNameValuePairAttribute(new X509EnrollmentNameValuePairParams()
            {
                Other = "test"
            });

            var param = new CertificateRequestParams()
            {
                Attributes = new Attribute[] { ChallengePasswordAttribute, EnrollmentNameValuePairAttribute, EnrollmentNameValuePairAttribute2 }
            };
            var req = new Pkcs10CertificateRequest(param);
            Assert.True(req.Verify());
            var lapo = Convert.ToBase64String(req.RawData);
        }

        [Fact]
        public void Create_without_params()
        {
            var param = new CertificateRequestParams();
            var req = new Pkcs10CertificateRequest(param);
            Assert.True(req.Verify());
        }

    }
}
